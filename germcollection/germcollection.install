<?php
/**
 * @file
 * Hooks related to module install or uninstall.
 */

/**
 * Implements hook_enable().
 */
function germcollection_enable() {

  // Ensure needed cvterm are added.
  if (!chado_get_cvterm(['cv_id' => ['name' => 'tripal'], 'name' => 'project_germcollection'])) {
    chado_insert_cvterm([
      'id' => 'local:project_germcollection',
      'name' => 'project_germcollection',
      'cv_name' => 'tripal',
      'definition' => 'Connects related germplasm to a project.',
    ]);
  }

  // Create stock collection content type.
  $args = [
    'vocabulary' => 'hydra',
    'accession' => 'Collection',
    'term_name' => 'Collection',
    'label' => 'Germplasm Collection',
    'storage_args' => [
      'data_table' => 'stockcollection',
    ],
    'category' => 'Germplasm/Breeding',
  ];
  $bundle = tripal_load_bundle_entity(['accession' => $args['vocabulary'] . ':' . $args['accession']]);
  if (!$bundle) {
    if (function_exists(drush_print)) {
      drush_print("Creating " . $args['term_name'] . "...");
    }

    if (tripal_create_bundle($args, $job)) {
      $msg = t('Created !type Content Type.', ['!type' => $args['term_name']]);
      drupal_set_message($msg);
    }
    else {
      $msg = t('Error encountered creating !type Content Type.', ['!type' => $args['term_name']]);
      drupal_set_message($msg, 'error');
    }
  }
  else {

    // Update the bundle category in case it was set incorrectly.
    $category = array_key_exists('category', $args) ? $args['category'] : 'Other';
    tripal_set_bundle_variable('bundle_category', $bundle->id, $category);

    $msg = t("Content type, !type, already created (skipping).", ['!type' => $args['term_name']]);
    drupal_set_message($msg);
  }
}

/**
 * Implements hook_schema().
 */
function germcollection_schema() {
  $schema['project_stockcollection'] = array (
    'description' => t('Linking table between projects and stock collections'),
    'fields' => array (
      'project_stockcollection_id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'project_id' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'stockcollection_id' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array ('project_stockcollection_id'),
    'unique keys' => array (
      'project_stockcollection_c1' => array (
        'project_id',
        'stockcollection_id',
      ),
    ),
    'foreign keys' => array (
      'project' => array (
        'table' => 'library',
        'columns' => array ('project_id' => 'project_id'),
      ),
      'stockcollection' => array (
        'table' => 'stock',
        'columns' => array ('stockcollection_id' => 'stockcollection_id'),
      ),
    ),
  );

  return $schema;
}