<?php
/**
 * @file
 * Contains core hook implementations for this module.
 */

require_once('includes/job.load_ontolgies.inc');

/**
 * Provides a list of the ontologies and terms used by this module.
 *
 *  * @return
 *   An array of ontologies keyed by ontology short-name with values themselves
 *   being arrays with the following keys:
 *    - name: the name of the ontology
 *    - definition: the definition of the ontology
 *    - file: the name of the OBO file to load this ontology
 *        (expected to be in kp_entities/ontologies folder)
 *    - all terms: Boolean indicating to load all terms in this ontology
 *    - terms: an array of terms if we only use a couple
 */
function uofspb_germplasm_ontology_list(){
  $ontologies = [];

  $ontologies['CO_010'] = [
    'name' => 'Crop Germplasm Ontology',
    'definition' => 'A controlled vocabulary to describe germplasm.',
    'file' => 'CO_010.obo',
    'all terms' => TRUE,
  ];

  $ontologies['MCPD'] = [
    'name' => 'Multi-Crop Passport Ontology',
    'definition' => 'FAO/Bioversity Multi-Crop Passport Descriptors V.2.1 [MCPD V.2.1] standard.',
    'file' => 'mcpd_v2.1_151215.obo',
    'all terms' => TRUE,
  ];

  $ontologies['stock_type'] = [
    'name' => 'stock_type',
    'definition' => 'A local vocabulary that contains a list of types for stocks.',
    'all terms' => FALSE,
    'terms' => [
      [
        'name' => 'F1',
        'definition' => 'The first generation of offsprint from a parental cross.',
        'cv_name' => 'stock_type',
        'accession' => 'F1',
        'db_name' => 'tripal'
      ],
    ],
  ];

  $ontologies['stock_property'] = [
    'name' => 'stock_property',
    'definition' => 'A local vocabulary that contains types of stock properties.',
    'all terms' => FALSE,
    'terms' => [
      'season' => [
        'name' => 'crossingblock_season',
        'definition' => 'Indicates that the current stock was the progeny of a cross made in the season specified.',
        'cv_name' => 'stock_property',
        'accession' => 'crossingblock_season',
        'db_name' => 'tripal'
      ],
      'year' => [
        'name' => 'crossingblock_year',
        'definition' => 'Indicates that the current stock was the progeny of a cross made in the year specified.',
        'cv_name' => 'stock_property',
        'accession' => 'crossingblock_year',
        'db_name' => 'tripal'
      ],
      'cotyledon_colour' => [
        'name' => 'cotyledon_colour',
        'definition' => 'The colour of the cotyledon',
        'cv_name' => 'stock_property',
        'accession' => 'cotyledon_colour',
        'db_name' => 'tripal'
      ],
      'seed_type' => [
        'name' => 'seed_type',
        'definition' => 'Characteristics or observable phenotypes of the seed.',
        'cv_name' => 'stock_property',
        'accession' => 'seed_type',
        'db_name' => 'tripal'
      ],
      'seed_coat_colour' => [
        'name' => 'seed_coat_colour',
        'definition' => 'The colour of the seed coat',
        'cv_name' => 'stock_property',
        'accession' => 'seed_coat_colour',
        'db_name' => 'tripal'
      ],
    ],
  ];

  $ontologies['stock_relationship'] = [
    'name' => 'stock_relationship',
    'definition' => 'A local vocabulary that contains types of relationships between stocks.',
    'all terms' => FALSE,
    'terms' => [
      'maternal_parent' => [
        'name' => 'is_maternal_parent_of',
        'definition' => '',
        'cv_name' => 'stock_relationship',
        'accession' => 'is_maternal_parent_of',
        'db_name' => 'tripal'
      ],
      'paternal_parent' => [
        'name' => 'is_paternal_parent_of',
        'definition' => '',
        'cv_name' => 'stock_relationship',
        'accession' => 'is_paternal_parent_of',
        'db_name' => 'tripal'
      ],
    ],
  ];

  $ontologies['schema'] = [
    'name' => 'schema',
    'definition' => 'Schema.org. Schema.org is sponsored by Google, Microsoft, Yahoo and Yandex. The vocabularies are developed by an open community process.',
    'all terms' => FALSE,
    'terms' => [
      'cross_type' => [
        'name' => 'additionalType',
        'definition' => '',
        'cv_name' => 'schema',
        'accession' => 'additionalType',
        'db_name' => 'schema'
      ],
    ],
  ];

  $ontologies['local'] = [
    'name' => 'local',
    'definition' => 'Locally created terms.',
    'all terms' => FALSE,
    'terms' => [
      'comment' => [
        'name' => 'comment',
        'definition' => 'Comments, typically from users. ',
        'cv_name' => 'schema',
        'accession' => 'comment',
        'db_name' => 'schema'
      ]
    ],
  ];

  return $ontologies;
}

/**
 * Implements hook_menu().
 */
function uofspb_germplasm_menu() {
  // Configuration page for Germplasm Importer Page.
  $items['admin/tripal/extension/germplasm_population_importer/configure'] = array(
    'title' => t('Germplasm Population Importer Configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('germplasm_population_importer_config_form'),
    'access arguments' => array('administer tripal'),
    'file' => 'includes/germplasm_population_importer.config.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_form_alter().
 * Hook will insert a form field to Tripal Importer file fieldset
 * in Germplasm Population Importer.
 */
function uofspb_germplasm_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['importer_class']['#value']) && $form['importer_class']['#value'] == 'GermplasmPopulationImporter') {
    // Configuration for prefix.
    $default_prefix = variable_get('germplasm_population_importer_default_prefix');
    
    # FIELD: Prefix gerplasm uniquename.
    // This is default to GERM.
    $form['file']['fld_text_prefix'] = [
      '#type' => 'textfield',
      '#title' => 'Prefix',
      '#description' => t('Please give a prefix for this germplasm individuals. Unique names for germplasm contained in file will 
        be this prefix followed by stock id. Unique prefix can help you track this germplasm in the future, and default prefix 
        is ' . $default_prefix . '. <br /><strong>NOTE:</strong> Unique names for existed germplasm individual will be updated with new prefix too.
      '),
      '#attributes' => array(
        'placeholder' => t($default_prefix)
      ),
      '#id' => 'population-importer-fld-text-prefix'
    ];

    # FIELD: Select existing/previously uploaded file.
    // This will prevent previously uploaded file from being suggested to user.
    // Will reqiure re-upload on failed submit due to errors.
    $form['file']['file_upload_existing'] = [];
  }
}